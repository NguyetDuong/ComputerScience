package graph;

import java.util.ArrayList;

/* See restrictions in Graph.java. */

/** Represents an undirected graph.  Out edges and in edges are not
 *  distinguished.  Likewise for successors and predecessors.
 *
 *  @author
 */
public class UndirectedGraph extends GraphObj {

    @Override
    public boolean isDirected() {
        return false;
    }

    @Override
    public int inDegree(int v) {
        // FIXME -- FIXED
    	if (!contains(v)) {
    		return 0;
    	} else {
    		int numsOfDeg = 0;
    		Iteration<int[]> obj = edges();
    		ArrayList<Integer> out = new ArrayList<Integer>();
    		for (int[] c : obj) {
        		if (c[0] == v || c[1] == v) {
        			numsOfDeg++;
        		}
        	}
	    		
    		return numsOfDeg;
    	}
    }

    @Override
    public int predecessor(int v, int k) {
        // FIXME
        return 0;
    }

    @Override
    public Iteration<Integer> predecessors(int v) {
        // FIXME
        return null;
    }

    // FIXME

}
